# Backend service with all dependencies
FROM node:18-alpine

# Install dependencies
WORKDIR /app/api
COPY api/package*.json ./
RUN npm ci --only=production

# Copy API source
COPY api/src ./src

# Install Docker Compose
RUN apk add --no-cache docker-compose

# Copy docker-compose for backend services
COPY <<EOF /app/docker-compose.backend.yml
version: '3.8'
services:
  mongodb:
    image: mongo:7
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: pids

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"

  keycloak-db:
    image: postgres:15
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    command: start-dev
    depends_on:
      - keycloak-db

volumes:
  mongodb_data:
  minio_data:
  postgres_data:
EOF

# Copy startup script
COPY <<EOF /app/start.sh
#!/bin/bash
set -e

# Start all backend services
cd /app
docker-compose -f docker-compose.backend.yml up -d

# Wait for services to be ready
sleep 30

# Start API
cd /app/api
npm start
EOF

RUN chmod +x /app/start.sh

# Expose API port
EXPOSE 3000

# Start everything
CMD ["/app/start.sh"]
